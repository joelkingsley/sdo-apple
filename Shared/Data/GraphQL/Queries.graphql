query GetAllChannels {
  Channel {
    id
    channelName
    ChannelType {
      channelTypeCode
    }
    locationLat
    locationLong
    regionCode
    addressText
  }
}

query GetHomeScreenData {
  documentaries: Video(where: {VideoType: {videoTypeName: {_eq: "documentary"}}}, order_by: {datePublished: desc}, limit: 15) {
    id
    Channel {
      id
      channelName
    }
    datePublished
    title
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
    VideoType {
      videoTypeName
    }
  }
  sermons: Video(where: {VideoType: {videoTypeName: {_eq: "sermon"}}}, order_by: {datePublished: desc}, limit: 15) {
    id
    Channel {
      id
      channelName
    }
    datePublished
    title
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
    VideoType {
      videoTypeName
    }
  }
  shorts: Video(where: {VideoType: {videoTypeName: {_eq: "short"}}}, order_by: {datePublished: desc}, limit: 15) {
    id
    Channel {
      id
      channelName
    }
    datePublished
    title
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
    VideoType {
      videoTypeName
    }
  }
  musicVideos: Video(where: {VideoType: {videoTypeName: {_eq: "music"}}}, order_by: {datePublished: desc}, limit: 15) {
    id
    Channel {
      id
      channelName
    }
    datePublished
    title
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
    VideoType {
      videoTypeName
    }
  }
}

query GetVideoDetailData($videoId: String!, $channelId: String!, $userUuid: String!) {
  videoDetail: Video(where: {id: {_eq: $videoId}}) {
    id
    title
    datePublished
    description
    _Video_speakers {
      Speaker {
        id
        speakerName
      }
    }
    Channel {
      id
      channelName
      ChannelType {
        channelTypeCode
      }
    }
    Language {
      languageCode
      sourceCountryFlag
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
    VideoType {
      videoTypeName
    }
  }
  moreVideosInChannel: Video(where: {channel: {_eq: $channelId}, id: {_neq: $videoId}}) {
    id
    title
    Channel {
      id
      channelName
    }
    datePublished
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
  }
  _User_likedVideos_aggregate(where: {B: {_eq: $videoId}, User: {userUuid: {_eq: $userUuid}}}) {
    aggregate {
      count
    }
  }
  _User_dislikedVideos_aggregate(where: {B: {_eq: $videoId}, User: {userUuid: {_eq: $userUuid}}}) {
    aggregate {
      count
    }
  }
}

query GetVideosForSearchText($searchText: String!, $limit: Int!, $offset: Int!) {
  Video(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}]}, limit: $limit, offset: $offset) {
    id
    VideoType {
      videoTypeName
    }
    title
    Channel {
      id
      channelName
    }
    datePublished
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
  }
  Video_aggregate(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}]}) {
    aggregate {
      count
    }
  }
}

query GetVideosForSearchTextAndVideoType($searchText: String!, $videoType: String!, $limit: Int!, $offset: Int!) {
  Video(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], VideoType: {videoTypeName: {_eq: $videoType}}}, limit: $limit, offset: $offset) {
    id
    VideoType {
      videoTypeName
    }
    title
    Channel {
      id
      channelName
    }
    datePublished
    _Video_speakers {
        Speaker {
          speakerName
        }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
  }
  Video_aggregate(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], VideoType: {videoTypeName: {_eq: $videoType}}}) {
    aggregate {
      count
    }
  }
}

query GetVideosForSearchTextAndLanguageCode($searchText: String!, $languageCode: String!, $limit: Int!, $offset: Int!) {
  Video(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], Language: {languageCode: {_eq: $languageCode}}}, limit: $limit, offset: $offset) {
    id
    VideoType {
      videoTypeName
    }
    title
    Channel {
      id
      channelName
    }
    datePublished
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
  }
  Video_aggregate(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], Language: {languageCode: {_eq: $languageCode}}}) {
    aggregate {
      count
    }
  }
}

query GetVideosForSearchTextVideoTypeAndLanguageCode($searchText: String!, $videoType: String!, $languageCode: String!, $limit: Int!, $offset: Int!) {
  Video(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], Language: {languageCode: {_eq: $languageCode}}, VideoType: {videoTypeName: {_eq: $videoType}}}, limit: $limit, offset: $offset) {
    id
    VideoType {
      videoTypeName
    }
    title
    Channel {
      id
      channelName
    }
    datePublished
    _Video_speakers {
      Speaker {
        speakerName
      }
    }
    gcpThumbnailBucketName
    gcpThumbnailFileName
  }
  Video_aggregate(where: {_or: [{Channel: {channelName: {_ilike: $searchText}}}, {title: {_ilike: $searchText}}], VideoType: {videoTypeName: {_eq: $videoType}}, Language: {languageCode: {_eq: $languageCode}}}) {
    aggregate {
      count
    }
  }
}

query GetChannelDetail($channelId: String!) {
  Channel(where: {id: {_eq: $channelId}}) {
    id
    channelName
    ChannelType {
      channelTypeCode
    }
    locationLat
    locationLong
    regionCode
    websiteUrl
    videosInChannel: Videos {
      id
      title
      VideoType {
        videoTypeName
      }
      _Video_speakers {
        Speaker {
          id
          speakerName
        }
      }
      Language {
        languageCode
        sourceCountryFlag
      }
      gcpThumbnailBucketName
      gcpThumbnailFileName
      description
      datePublished
    }
  }
}

query GetAllLanguages {
  Language {
    languageCode
    sourceCountryFlag
  }
}

query GetUserData($userUuid: String!) {
  User(where: {userUuid: {_eq: $userUuid}}) {
    id
    userUuid
    userEmail
  }
}
